#!/usr/bin/env node


//const resolveModule = require('resolve').sync;
const resolvePath = require('path').resolve;
const parseOpts = require('minimist');
const glob = require('glob');

//TODO: Add in defaults for ignore, files,
//TODO: Look up some defaults in the package

/*
_ - tests, defaults to '*.test.js'
-w, --watch - defaults to false, if true make it '*.js'
--require='' - add in a require path
--fail-fast?
--timeout

*/


const opts = parseOpts(process.argv.slice(2), {
		alias: { r: 'require' },
		string: 'require',
		default: { r: [] }
	});

console.log(opts);


/*

const cwd = process.cwd();

if (typeof opts.require === 'string') {
	opts.require = [opts.require];
}

opts.require.forEach(function(module) {
	if (module) {
		require(resolveModule(module, { basedir: cwd }));
	}
});

opts._.forEach(function (arg) {
	// If glob does not match, `files` will be an empty array.
	// Note: `glob.sync` may throw an error and crash the node process.
	const files = glob.sync(arg);

	if (!Array.isArray(files)) {
		throw new TypeError('unknown error: glob.sync did not return an array or throw. Please report this.');
	}

	files.forEach(function (file) {
		require(resolvePath(cwd, file));
	});
});

// vim: ft=javascript
*/